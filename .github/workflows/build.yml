name: Go Build and Release

on:
  push:
    branches:
      - master

jobs:
  build-linux-windows:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            ext: ""
          - os: linux
            arch: arm64
            ext: ""
          - os: windows
            arch: 386
            ext: ".exe"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21.x

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y make git g++ upx gcc-arm-linux* g++-arm-linux*

      - name: Make Dependencies
        run: make deps

      - name: Build Production
        run: GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} BIN_EXT=${{ matrix.ext }} make build_production

      - name: Compress
        run: GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} BIN_EXT=${{ matrix.ext }} make compress || true

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}
          path: ./bin/*

  build-darwin:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21.x

      - name: Install Dependencies
        run: brew install make git upx

      - name: Make Dependencies
        run: make deps

      - name: Build Production
        run: GOOS=darwin GOARCH=${{ matrix.arch }} make build_production

#      - name: Compress
#        run: GOOS=darwin GOARCH=${{ matrix.arch }} make compress || true

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: darwin-${{ matrix.arch }}
          path: ./bin/*

  release:
    needs: [build-linux-windows, build-darwin]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: ./bin/

      - name: Install gh CLI
        run: sudo apt install -y gh

      - name: Create GitHub Release
        run: |
          VERSION=$(gh release list --limit 1 --json versionName | jq -r '.[0].versionName')
          NEW_VERSION=$(echo $VERSION | awk -F. '{$NF = $NF + 1;} 1' OFS=.)
          gh release create $NEW_VERSION ./bin/* --title "Release $NEW_VERSION" --notes "Release notes for $NEW_VERSION"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
